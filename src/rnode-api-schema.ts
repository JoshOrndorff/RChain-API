/**
 * This file was auto-generated by swagger-to-ts.
 * Do not make direct changes to the file.
 */

export interface definitions {
  /**
   * RhoExpr
   */
  RhoExpr: {
    type:
      | "ExprList"
      | "ExprPar"
      | "ExprUri"
      | "ExprBytes"
      | "ExprString"
      | "ExprBool"
      | "ExprMap"
      | "ExprUnforg"
      | "ExprInt"
      | "ExprTuple";
  };
  /**
   * ExprList
   */
  ExprList: definitions["RhoExpr"] & { data: definitions["RhoExpr"][] };
  /**
   * ExprPar
   */
  ExprPar: definitions["RhoExpr"] & { data: definitions["RhoExpr"][] };
  /**
   * BondInfo
   */
  BondInfo: { validator?: string; stake?: number };
  /**
   * ExprUri
   */
  ExprUri: definitions["RhoExpr"] & { data: string };
  /**
   * ExprBytes
   */
  ExprBytes: definitions["RhoExpr"] & { data: string };
  /**
   * PrepareRequest
   */
  PrepareRequest: { deployer: string; timestamp: number; nameQty: number };
  /**
   * RhoUnforg
   */
  RhoUnforg: { type: "UnforgDeploy" | "UnforgDeployer" | "UnforgPrivate" };
  /**
   * UnforgPrivate
   */
  UnforgPrivate: definitions["RhoUnforg"] & { data: string };
  /**
   * ExploratoryDeployResponse
   */
  ExploratoryDeployResponse: {
    expr: definitions["RhoExpr"][];
    block: definitions["LightBlockInfo"];
  };
  /**
   * DataResponse
   */
  DataResponse: { exprs: definitions["RhoExprWithBlock"][]; length: number };
  /**
   * PrepareResponse
   */
  PrepareResponse: { names: string[]; seqNumber: number };
  /**
   * ExprString
   */
  ExprString: definitions["RhoExpr"] & { data: string };
  /**
   * RhoExprWithBlock
   */
  RhoExprWithBlock: {
    expr: definitions["RhoExpr"];
    block: definitions["LightBlockInfo"];
  };
  /**
   * LightBlockInfo
   */
  LightBlockInfo: {
    blockHash?: string;
    justifications?: definitions["JustificationInfo"][];
    timestamp?: number;
    /**
     * com.google.protobuf.ByteString
     */
    extraBytes?: string;
    bonds?: definitions["BondInfo"][];
    parentsHashList?: string[];
    shardId?: string;
    sigAlgorithm?: "secp256k1";
    sig?: string;
    blockSize?: string;
    postStateHash?: string;
    version?: number;
    seqNum?: number;
    blockNumber?: number;
    sender?: string;
    /**
     * com.google.protobuf.ByteString
     */
    headerExtraBytes?: string;
    /**
     * com.google.protobuf.ByteString
     */
    bodyExtraBytes?: string;
    faultTolerance?: number;
    preStateHash?: string;
    deployCount?: number;
  };
  /**
   * ExploreDeployRequest
   */
  ExploreDeployRequest: {
    term: string;
    blockHash: string;
    usePreStateHash: boolean;
  };
  /**
   * DeployData
   */
  DeployData: {
    /**
     * conventionally in milliseconds though not constrained by real time
     */
    timestamp: number;
    term: string;
    /**
     * bound on computation to be paid for.
     */
    phloLimit: number;
    /**
     * price (in 10^-8 REV) of each unit of computation. typically 1
     */
    phloPrice: number;
    /**
     * number of a recent block
     */
    validAfterBlockNumber: number;
  };
  /**
   * DeployInfo
   */
  DeployInfo: {
    timestamp?: number;
    /**
     * empty string indicates lack of error
     */
    systemDeployError?: string;
    term?: string;
    phloLimit?: number;
    sigAlgorithm?: "secp256k1" | "secp256k1:eth";
    deployer?: string;
    sig?: string;
    errored?: boolean;
    /**
     * in units of 10^-8 REV
     */
    cost?: number;
    /**
     * in units of 10^-8 REV
     */
    phloPrice?: number;
    validAfterBlockNumber?: number;
  };
  /**
   * JustificationInfo
   */
  JustificationInfo: { validator?: string; latestBlockHash?: string };
  /**
   * A DeployRequest consists of a DeployData plus a signature compouted over the protobuf serialization of the DeployData. The secp256k1 algorithm indicates DER format; secp256k1:eth indicates RS format.
   */
  DeployRequest: {
    data: definitions["DeployData"];
    deployer: string;
    signature: string;
    sigAlgorithm: "secp256k1" | "secp256k1:eth";
  };
  /**
   * ExprBool
   */
  ExprBool: definitions["RhoExpr"] & { data: boolean };
  /**
   * UnforgDeploy
   */
  UnforgDeploy: definitions["RhoUnforg"] & { data: string };
  /**
   * BlockInfo
   */
  BlockInfo: {
    blockInfo?: definitions["LightBlockInfo"];
    deploys?: definitions["DeployInfo"][];
  };
  /**
   * ExprMap
   */
  ExprMap: definitions["RhoExpr"] & { data: { [key: string]: ref } };
  /**
   * UnforgDeployer
   */
  UnforgDeployer: definitions["RhoUnforg"] & { data: string };
  /**
   * ExprUnforg
   */
  ExprUnforg: definitions["RhoExpr"] & { data: definitions["RhoUnforg"] };
  /**
   * ExprInt
   */
  ExprInt: definitions["RhoExpr"] & { data: number };
  /**
   * DataRequest
   */
  DataRequest: { name: definitions["RhoUnforg"]; depth: number };
  /**
   * ExprTuple
   */
  ExprTuple: definitions["RhoExpr"] & { data: definitions["RhoExpr"][] };
}
